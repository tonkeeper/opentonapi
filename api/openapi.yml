openapi: 3.0.2
info:
  title: REST api to TON blockchain explorer
  version: 2.0.0
  description: Provide access to indexed TON blockchain
  contact:
    name: Support
    email: support@tonkeeper.com
servers:
  - url: "https://tonapi.io"
  - url: "https://testnet.tonapi.io"
  - url: "http://localhost:8081"
paths:
  /v2/blockchain/blocks/{block_id}:
    get:
      description: Get blockchain block data
      operationId: getBlockchainBlock
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDParameter'
      responses:
        '200':
          description: blockchain block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainBlock'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain/{masterchain_seqno}/shards:
    get:
      description: Get blockchain block shards
      operationId: getBlockchainMasterchainShards
      tags:
          - Blockchain
      parameters:
        - $ref: '#/components/parameters/masterchainSeqno'
      responses:
          '200':
            description: blockchain block shards
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BlockchainBlockShards'
          'default':
            $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain/{masterchain_seqno}/blocks:
    get:
      description: Get all blocks in all shards and workchains between target and previous masterchain block according to shards last blocks snapshot in masterchain.  We don't recommend to build your app around this method because it has problem with scalability and will work very slow in the future.
      operationId: getBlockchainMasterchainBlocks
      tags:
          - Blockchain
      parameters:
        - $ref: '#/components/parameters/masterchainSeqno'
      responses:
          '200':
            description: blockchain blocks
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BlockchainBlocks'
          'default':
            $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain/{masterchain_seqno}/transactions:
    get:
      description: Get all transactions in all shards and workchains between target and previous masterchain block according to shards last blocks snapshot in masterchain. We don't recommend to build your app around this method because it has problem with scalability and will work very slow in the future.
      operationId: getBlockchainMasterchainTransactions
      tags:
          - Blockchain
      parameters:
        - $ref: '#/components/parameters/masterchainSeqno'
      responses:
          '200':
            description: blockchain transactions
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transactions'
          'default':
            $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain/{masterchain_seqno}/config:
    get:
      description: Get blockchain config from a specific block, if present.
      operationId: getBlockchainConfigFromBlock
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/masterchainSeqno'
      responses:
        '200':
          description: blockchain config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainConfig'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain/{masterchain_seqno}/config/raw:
    get:
      description: Get raw blockchain config from a specific block, if present.
      operationId: getRawBlockchainConfigFromBlock
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/masterchainSeqno'
      responses:
        '200':
          description: blockchain config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawBlockchainConfig'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/blocks/{block_id}/transactions:
    get:
      description: Get transactions from block
      operationId: getBlockchainBlockTransactions
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDParameter'
      responses:
        '200':
          description: blockchain block transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/transactions/{transaction_id}:
    get:
      description: Get transaction data
      operationId: getBlockchainTransaction
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/transactionIDParameter'
      responses:
        '200':
          description: blockchain transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/messages/{msg_id}/transaction:
    get:
      description: Get transaction data by message hash
      operationId: getBlockchainTransactionByMessageHash
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/messageIDParameter'
      responses:
        '200':
          description: transaction by message hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/validators:
    get:
      description: Get blockchain validators
      operationId: getBlockchainValidators
      tags:
        - Blockchain
      responses:
        '200':
          description: blockchain validators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validators'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/masterchain-head:
    get:
      description: Get last known masterchain block
      operationId: getBlockchainMasterchainHead
      tags:
        - Blockchain
      responses:
        '200':
          description: blockchain masterchain head
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainBlock'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/accounts/{account_id}:
    get:
      description: Get low-level information about an account taken directly from the blockchain.
      operationId: getBlockchainRawAccount
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: raw account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainRawAccount'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/accounts/{account_id}/transactions:
    get:
      description: Get account transactions
      operationId: getBlockchainAccountTransactions
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - name: after_lt
          in: query
          description: "omit this parameter to get last transactions"
          schema:
            type: integer
            format: int64
            example: 39787624000003
        - name: before_lt
          in: query
          description: "omit this parameter to get last transactions"
          schema:
            type: integer
            format: int64
            example: 39787624000003
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            maximum: 1000
            default: 100
            example: 100
      responses:
        '200':
          description: blockchain account transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/accounts/{account_id}/methods/{method_name}:
    get:
      description: Execute get method for account
      operationId: execGetMethodForBlockchainAccount
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/methodNameParameter'
        - name: args
          in: query
          required: false
          schema:
            type: array
            description: "Supported values: NaN, Null, 10-base digits for tiny int, 0x-prefixed hex digits for int257, all forms of addresses for slice, single-root base64-encoded BOC for cell"
            items:
              type: string
            example: [ "0:9a33970f617bcd71acf2cd28357c067aa31859c02820d8f01d74c88063a8f4d8" ]
      responses:
        '200':
          description: method execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodExecutionResult'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/message:
    post:
      description: Send message to blockchain
      operationId: sendBlockchainMessage
      tags:
        - Blockchain
      requestBody:
        $ref: "#/components/requestBodies/BatchBoc"
      responses:
        '200':
          description: the message has been sent
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/config:
    get:
      description: Get blockchain config
      operationId: getBlockchainConfig
      tags:
        - Blockchain
      responses:
        '200':
          description: blockchain config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainConfig'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/config/raw:
    get:
      description: Get raw blockchain config
      operationId: getRawBlockchainConfig
      tags:
        - Blockchain
      responses:
        '200':
          description: blockchain config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawBlockchainConfig'
        'default':
          $ref: '#/components/responses/Error'
  /v2/blockchain/accounts/{account_id}/inspect:
    get:
      description: Blockchain account inspect
      operationId: blockchainAccountInspect
      tags:
        - Blockchain
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: blockchain account inspect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainAccountInspect'
        'default':
          $ref: '#/components/responses/Error'
  /v2/message/decode:
    post:
      description: Decode a given message. Only external incoming messages can be decoded currently.
      operationId: decodeMessage
      tags:
        - Emulation
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: decoded message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodedMessage'
        'default':
          $ref: '#/components/responses/Error'
  /v2/address/{account_id}/parse:
    get:
      description: parse address and display in all formats
      operationId: addressParse
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: all forms and info
          content:
            application/json:
              schema:
                type: object
                required:
                  - raw_form
                  - bounceable
                  - non_bounceable
                  - given_type
                  - test_only
                properties:
                  raw_form:
                    type: string
                    example: "0:6e731f2e28b73539a7f85ac47ca104d5840b229351189977bb6151d36b5e3f5e"
                  bounceable:
                    required:
                      - b64
                      - b64url
                    type: object
                    properties:
                      b64:
                        type: string
                      b64url:
                        type: string
                  non_bounceable:
                    required:
                      - b64
                      - b64url
                    type: object
                    properties:
                      b64:
                        type: string
                      b64url:
                        type: string
                  given_type:
                    type: string
                  test_only:
                    type: boolean

        default:
          $ref: '#/components/responses/Error'



  /v2/events/emulate:
    post:
      description: Emulate sending message to blockchain
      operationId: emulateMessageToEvent
      tags:
        - Emulation
      parameters:
        - $ref: '#/components/parameters/i18n'
        - name: ignore_signature_check
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: emulated event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        'default':
          $ref: '#/components/responses/Error'
  /v2/traces/emulate:
    post:
      description: Emulate sending message to blockchain
      operationId: emulateMessageToTrace
      tags:
        - Emulation
      parameters:
        - name: ignore_signature_check
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: emulated trace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
        'default':
          $ref: '#/components/responses/Error'
  /v2/wallet/emulate:
    post:
      description: Emulate sending message to blockchain
      operationId: emulateMessageToWallet
      tags:
        - Emulation
      parameters:
        - $ref: '#/components/parameters/i18n'
      requestBody:
        $ref: "#/components/requestBodies/EmulationBoc"
      responses:
        '200':
          description: emulated message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageConsequences'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/events/emulate:
    post:
      description: Emulate sending message to blockchain
      operationId: emulateMessageToAccountEvent
      tags:
        - Emulation
      parameters:
        - $ref: '#/components/parameters/i18n'
        - $ref: '#/components/parameters/accountIDParameter'
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: emulated message to account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvent'
        'default':
          $ref: '#/components/responses/Error'

  /v2/accounts/_bulk:
    post:
      description: Get human-friendly information about several accounts without low-level details.
      operationId: getAccounts
      tags:
        - Accounts
      requestBody:
        $ref: "#/components/requestBodies/AccountIDs"
      responses:
        '200':
          description: a list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}:
    get:
      description: Get human-friendly information about an account without low-level details.
      operationId: getAccount
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/dns/backresolve:
    get:
      description: Get account's domains
      operationId: accountDnsBackResolve
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account's domains
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainNames'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/jettons:
    get:
      description: Get all Jettons balances by owner address
      operationId: getAccountJettonsBalances
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/currenciesQuery'
      responses:
        '200':
          description: account jettons balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JettonsBalances'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/jettons/history:
    get:
      description: Get the transfer jettons history for account
      operationId: getAccountJettonsHistory
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/i18n'
        - name: before_lt
          in: query
          description: "omit this parameter to get last events"
          required: false
          schema:
            type: integer
            format: int64
            example: 25758317000002
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
            maximum: 1000
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: account jettons history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvents'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/jettons/{jetton_id}/history:
    get:
      description: Get the transfer jetton history for account and jetton
      operationId: getAccountJettonHistoryByID
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/jettonIDParameter'
        - $ref: '#/components/parameters/i18n'
        - name: before_lt
          in: query
          description: "omit this parameter to get last events"
          required: false
          schema:
            type: integer
            format: int64
            example: 25758317000002
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
            maximum: 1000
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: account jetton history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvents'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/nfts:
    get:
      description: Get all NFT items by owner address
      operationId: getAccountNftItems
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/collectionQuery'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
        - in: query
          name: indirect_ownership
          required: false
          description: "Selling nft items in ton implemented usually via transfer items to special selling account. This option enables including items which owned not directly."
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: account nft items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/nfts/history:
    get:
      description: Get the transfer nft history
      operationId: getAccountNftHistory
      tags:
        - NFT
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/i18n'
        - name: before_lt
          in: query
          description: "omit this parameter to get last events"
          required: false
          schema:
            type: integer
            format: int64
            example: 25758317000002
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
            maximum: 1000
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: nft history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvents'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/events:
    get:
      description: Get events for an account. Each event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.
      operationId: getAccountEvents
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/i18n'
        - $ref: '#/components/parameters/initiatorQuery'
        - name: subject_only
          in: query
          description: "filter actions where requested account is not real subject (for example sender or receiver jettons)"
          schema:
            type: boolean
            default: false
          required: false
        - name: before_lt
          in: query
          description: "omit this parameter to get last events"
          required: false
          schema:
            type: integer
            format: int64
            example: 25758317000002
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
            maximum: 1000
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: account's events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvents'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/events/{event_id}:
    get:
      description: Get event for an account by event_id
      operationId: getAccountEvent
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/eventIDParameter'
        - $ref: '#/components/parameters/i18n'
        - name: subject_only
          in: query
          description: "filter actions where requested account is not real subject (for example sender or receiver jettons)"
          schema:
            type: boolean
            default: false
          required: false
      responses:
        '200':
          description: account's event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvent'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/traces:
    get:
      description: Get traces for account
      operationId: getAccountTraces
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - name: limit
          in: query
          schema:
            type: integer
            maximum: 1000
            default: 100
            example: 100
      responses:
        '200':
          description: account's traces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceIDs'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/subscriptions:
    get:
      description: Get all subscriptions by wallet address
      operationId: getAccountSubscriptions
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account's subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/reindex:
    post:
      description: Update internal cache for a particular account
      operationId: reindexAccount
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: success
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/search:
    get:
      description: Search by account domain name
      operationId: searchAccounts
      tags:
        - Accounts
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 15
      responses:
        '200':
          description: found accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoundAccounts'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/dns/expiring:
    get:
      description: Get expiring account .ton dns
      operationId: getAccountDnsExpiring
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/periodQuery'
      responses:
        '200':
          description: account's expiring .ton dns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsExpiring'
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/publickey:
    get:
      description: Get public key by account id
      operationId: getAccountPublicKey
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account's public key
          content:
            application/json:
              schema:
                type: object
                required:
                  - public_key
                properties:
                  public_key:
                    type: string
                    example: "NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3..."
        'default':
          $ref: '#/components/responses/Error'
  /v2/accounts/{account_id}/diff:
    get:
      description: Get account's balance change
      operationId: getAccountDiff
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - name: start_date
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: account's balance change
          content:
            application/json:
              schema:
                type: object
                required:
                  - balance_change
                properties:
                  balance_change:
                    type: integer
                    format: int64
                    example: 1000000000
        'default':
          $ref: '#/components/responses/Error'
  
  /v2/dns/{domain_name}:
    get:
      description: Get full information about domain name
      operationId: getDnsInfo
      tags:
        - DNS
      parameters:
        - $ref: '#/components/parameters/domainNameParameter'
      responses:
        '200':
          description: domain info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInfo'
        'default':
          $ref: '#/components/responses/Error'
  /v2/dns/{domain_name}/resolve:
    get:
      description: DNS resolve for domain name
      operationId: dnsResolve
      tags:
        - DNS
      parameters:
        - $ref: '#/components/parameters/domainNameParameter'
      responses:
        '200':
          description: dns record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRecord'
        'default':
          $ref: '#/components/responses/Error'
  /v2/dns/{domain_name}/bids:
    get:
      description: Get domain bids
      operationId: getDomainBids
      tags:
        - DNS
      parameters:
        - $ref: '#/components/parameters/domainNameParameter'
      responses:
        '200':
          description: domain bids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainBids'
        'default':
          $ref: '#/components/responses/Error'
  /v2/dns/auctions:
    get:
      description: Get all auctions
      operationId: getAllAuctions
      tags:
        - DNS
      parameters:
        - $ref: '#/components/parameters/domainFilterQuery'
      responses:
        '200':
          description: auctions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auctions'
        'default':
          $ref: '#/components/responses/Error'

  /v2/nfts/collections:
    get:
      description: Get NFT collections
      operationId: getNftCollections
      tags:
        - NFT
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            maximum: 1000
            default: 100
            example: 15
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
            example: 10
      responses:
        '200':
          description: nft collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollections'
        'default':
          $ref: '#/components/responses/Error'
  /v2/nfts/collections/{account_id}:
    get:
      description: Get NFT collection by collection address
      operationId: getNftCollection
      tags:
        - NFT
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: nft collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollection'
        'default':
          $ref: '#/components/responses/Error'
  /v2/nfts/collections/{account_id}/items:
    get:
      description: Get NFT items from collection by collection address
      operationId: getItemsFromCollection
      tags:
        - NFT
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          description: nft items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
        'default':
          $ref: '#/components/responses/Error'
  /v2/nfts/_bulk:
    post:
      description: Get NFT items by their addresses
      operationId: getNftItemsByAddresses
      tags:
        - NFT
      requestBody:
        $ref: "#/components/requestBodies/AccountIDs"
      responses:
        '200':
          description: nft items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
        'default':
          $ref: '#/components/responses/Error'
  /v2/nfts/{account_id}:
    get:
      description: Get NFT item by its address
      operationId: getNftItemByAddress
      tags:
        - NFT
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: nft item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItem'
        'default':
          $ref: '#/components/responses/Error'
  /v2/nfts/{account_id}/history:
    get:
      description: Get the transfer nfts history for account
      operationId: getNftHistoryByID
      tags:
        - NFT
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/i18n'
        - name: before_lt
          in: query
          description: "omit this parameter to get last events"
          required: false
          schema:
            type: integer
            format: int64
            example: 25758317000002
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
            maximum: 1000
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: nft history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEvents'
        'default':
          $ref: '#/components/responses/Error'
  /v2/traces/{trace_id}:
    get:
      description: Get the trace by trace ID or hash of any transaction in trace
      operationId: getTrace
      tags:
        - Traces
      parameters:
        - $ref: '#/components/parameters/traceIDParameter'
      responses:
        '200':
          description: trace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trace'
        'default':
          $ref: '#/components/responses/Error'

  /v2/events/{event_id}:
    get:
      description: Get an event either by event ID or a hash of any transaction in a trace. An event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.
      operationId: getEvent
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/eventIDParameter'
        - $ref: '#/components/parameters/i18n'
      responses:
        '200':
          description: event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        'default':
          $ref: '#/components/responses/Error'

  /v2/jettons:
    get:
      description: Get a list of all indexed jetton masters in the blockchain.
      operationId: getJettons
      tags:
        - Jettons
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            maximum: 1000
            default: 100
            example: 15
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
            example: 10
      responses:
        '200':
          description: a list of jettons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jettons'
        'default':
          $ref: '#/components/responses/Error'
  /v2/jettons/{account_id}:
    get:
      description: Get jetton metadata by jetton master address
      operationId: getJettonInfo
      tags:
        - Jettons
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: jetton info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JettonInfo'
        'default':
          $ref: '#/components/responses/Error'
  /v2/jettons/{account_id}/holders:
    get:
      description: Get jetton's holders
      operationId: getJettonHolders
      tags:
        - Jettons
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          description: jetton's holders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JettonHolders'
        'default':
          $ref: '#/components/responses/Error'
  /v2/events/{event_id}/jettons:
    get:
      description: "Get only jetton transfers in the event"
      operationId: getJettonsEvents
      tags:
        - Jettons
      parameters:
        - $ref: '#/components/parameters/eventIDParameter'
        - $ref: '#/components/parameters/i18n'
      responses:
        '200':
          description: events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        'default':
          $ref: '#/components/responses/Error'

  /v2/staking/nominator/{account_id}/pools:
    get:
      description: All pools where account participates
      operationId: getAccountNominatorsPools
      tags:
        - Staking
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account's pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStaking'
        'default':
          $ref: '#/components/responses/Error'
  /v2/staking/pool/{account_id}:
    get:
      description: Stacking pool info
      operationId: getStakingPoolInfo
      tags:
        - Staking
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/i18n'
      responses:
        '200':
          description: stacking pool info
          content:
            application/json:
              schema:
                type: object
                required:
                  - implementation
                  - pool
                properties:
                  implementation:
                    $ref: '#/components/schemas/PoolImplementation'
                  pool:
                    $ref: '#/components/schemas/PoolInfo'
        'default':
          $ref: '#/components/responses/Error'
  /v2/staking/pool/{account_id}/history:
    get:
      description: Pool history
      operationId: getStakingPoolHistory
      tags:
        - Staking
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: pool history
          content:
            application/json:
              schema:
                type: object
                required:
                  - apy
                properties:
                  apy:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApyHistory'
        'default':
          $ref: '#/components/responses/Error'
  /v2/staking/pools:
    get:
      description: All pools available in network
      operationId: getStakingPools
      tags:
        - Staking
      parameters:
        - in: query
          name: available_for
          required: false
          description: account ID
          schema:
            type: string
            example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
        - in: query
          name: include_unverified
          required: false
          description: "return also pools not from white list - just compatible by interfaces (maybe dangerous!)"
          schema:
            type: boolean
            example: false
        - $ref: '#/components/parameters/i18n'
      responses:
        '200':
          description: a list of pools
          content:
            application/json:
              schema:
                type: object
                required:
                  - pools
                  - implementations
                properties:
                  pools:
                    type: array
                    items:
                      $ref: '#/components/schemas/PoolInfo'
                  implementations:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/PoolImplementation'
        'default':
          $ref: '#/components/responses/Error'

  /v2/storage/providers:
    get:
      description: Get TON storage providers deployed to the blockchain.
      operationId: getStorageProviders
      tags:
        - Storage
      responses:
        '200':
          description: a list of storage providers
          content:
            application/json:
              schema:
                type: object
                required:
                  - providers
                properties:
                  providers:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageProvider'
        'default':
          $ref: '#/components/responses/Error'
  
  /v2/rates:
    get:
      description: Get the token price to the currency
      operationId: getRates
      tags:
        - Rates
      parameters:
        - in: query
          name: tokens
          description: accept ton and jetton master addresses, separated by commas
          required: true
          schema:
            type: string
            example: ton
        - in: query
          name: currencies
          description: accept ton and all possible fiat currencies, separated by commas
          required: true
          schema:
            type: string
            example: ton,usd,rub
      responses:
        '200':
          description: tokens rates
          content:
            application/json:
              schema:
                type: object
                required:
                  - rates
                properties:
                  rates:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/TokenRates'
        'default':
          $ref: '#/components/responses/Error'
  /v2/rates/chart:
    get:
      description: Get chart by token
      operationId: getChartRates
      tags:
        - Rates
      parameters:
        - in: query
          name: token
          description: accept jetton master address
          required: true
          schema:
            type: string
        - in: query
          name: currency
          required: false
          schema:
            type: string
            example: usd
        - name: start_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
        - name: end_date
          in: query
          required: false
          schema:
            type: integer
            format: int64
            example: 1668436763
      responses:
        '200':
          description: token chart
          content:
            application/json:
              schema:
                type: object
                required:
                  - points
                properties:
                  points:
                    additionalProperties: true
                    example: { }
        'default':
          $ref: '#/components/responses/Error'
  
  /v2/tonconnect/payload:
    get:
      description: Get a payload for further token receipt
      operationId: getTonConnectPayload
      tags:
        - Connect
      responses:
        '200':
          description: payload
          content:
            application/json:
              schema:
                type: object
                required:
                  - payload
                properties:
                  payload:
                    type: string
                    example: "84jHVNLQmZsAAAAAZB0Zryi2wqVJI-KaKNXOvCijEi46YyYzkaSHyJrMPBMOkVZa"
        'default':
          $ref: '#/components/responses/Error'
  /v2/tonconnect/stateinit:
    post:
      description: Get account info by state init
      operationId: getAccountInfoByStateInit
      tags:
        - Connect
      requestBody:
        $ref: "#/components/requestBodies/TonConnectStateInit"
      responses:
        '200':
          description: account info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoByStateInit'
        'default':
          $ref: '#/components/responses/Error'
  
  /v2/wallet/backup:
    get:
      description: Get backup info
      operationId: getWalletBackup
      tags:
        - Wallet
      parameters:
        - in: header
          name: X-TonConnect-Auth
          schema:
            type: string
          required: true
      responses:
        '200':
          description: get wallet dump
          content:
            application/json:
              schema:
                type: object
                required:
                  - dump
                properties:
                  dump:
                    type: string
        'default':
          $ref: '#/components/responses/Error'
    put:
      description: Set backup info
      operationId: setWalletBackup
      tags:
        - Wallet
      parameters:
        - in: header
          name: X-TonConnect-Auth
          schema:
            type: string
          required: true
      requestBody:
        $ref: "#/components/requestBodies/Backup"
      responses:
        '200':
          description: success
        'default':
          $ref: '#/components/responses/Error'
  /v2/wallet/auth/proof:
    post:
      description: Account verification and token issuance
      operationId: tonConnectProof
      tags:
        - Wallet
      requestBody:
        $ref: "#/components/requestBodies/TonConnectProof"
      responses:
        '200':
          description: auth token
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    example: "NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3..."
        'default':
          $ref: '#/components/responses/Error'
  /v2/pubkeys/{public_key}/wallets:
    get:
      description: Get wallets by public key
      operationId: getWalletsByPublicKey
      tags:
        - Wallet
      parameters:
        - $ref: '#/components/parameters/publicKeyParameter'
      responses:
        '200':
          description: a list of wallets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        'default':
          $ref: '#/components/responses/Error'
  /v2/wallet/{account_id}/seqno:
    get:
      description: Get account seqno
      operationId: getAccountSeqno
      tags:
        - Wallet
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
      responses:
        '200':
          description: account seqno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seqno'
        'default':
          $ref: '#/components/responses/Error'

  /v2/liteserver/get_masterchain_info:
    get:
      description: Get raw masterchain info
      operationId: getRawMasterchainInfo
      tags:
        - Lite Server
      responses:
        '200':
          description: raw masterchain info
          content:
            application/json:
              schema:
                type: object
                required:
                  - last
                  - state_root_hash
                  - init
                properties:
                  last:
                    $ref: '#/components/schemas/BlockRaw'
                  state_root_hash:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  init:
                    $ref: '#/components/schemas/InitStateRaw'
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_masterchain_info_ext:
    get:
      description: Get raw masterchain info ext
      operationId: getRawMasterchainInfoExt
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/modeQuery'
      responses:
        '200':
          description: raw masterchain info ext
          content:
            application/json:
              schema:
                type: object
                required:
                  - mode
                  - version
                  - capabilities
                  - last
                  - last_utime
                  - now
                  - state_root_hash
                  - init
                properties:
                  mode:
                    type: integer
                    format: uint32
                    example: 0
                  version:
                    type: integer
                    format: uint32
                    example: 257
                  capabilities:
                    type: integer
                    format: uint64
                    example: 7
                  last:
                    $ref: '#/components/schemas/BlockRaw'
                  last_utime:
                    type: integer
                    format: uint32
                    example: 1687938199
                  now:
                    type: integer
                    format: uint32
                    example: 1687938204
                  state_root_hash:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  init:
                    $ref: '#/components/schemas/InitStateRaw'
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_time:
    get:
      description: Get raw time
      operationId: getRawTime
      tags:
        - Lite Server
      responses:
        '200':
          description: raw time
          content:
            application/json:
              schema:
                type: object
                required:
                  - time
                properties:
                  time:
                    type: integer
                    format: uint32
                    example: 1687146728
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_block/{block_id}:
    get:
      description: Get raw blockchain block
      operationId: getRawBlockchainBlock
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
      responses:
        '200':
          description: raw blockchain block
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - data
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  data:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_state/{block_id}:
    get:
      description: Get raw blockchain block state
      operationId: getRawBlockchainBlockState
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
      responses:
        '200':
          description: raw blockchain block state
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - root_hash
                  - file_hash
                  - data
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  root_hash:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  file_hash:
                    type: string
                    example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
                  data:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_block_header/{block_id}:
    get:
      description: Get raw blockchain block header
      operationId: getRawBlockchainBlockHeader
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
        - $ref: '#/components/parameters/modeQuery'
      responses:
        '200':
          description: raw blockchain block header
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - mode
                  - header_proof
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  mode:
                    type: integer
                    format: uint32
                    example: 0
                  header_proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/send_message:
    post:
      description: Send raw message to blockchain
      operationId: sendRawMessage
      tags:
        - Lite Server
      requestBody:
        $ref: "#/components/requestBodies/LiteServerSendMessageRequest"
      responses:
        '200':
          description: code
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                properties:
                  code:
                    type: integer
                    format: uint32
                    example: 200
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_account_state/{account_id}:
    get:
      description: Get raw account state
      operationId: getRawAccountState
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/targetBlockIDExtQuery'
      responses:
        '200':
          description: raw account state
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - shardblk
                  - shard_proof
                  - proof
                  - state
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  shardblk:
                    $ref: '#/components/schemas/BlockRaw'
                  shard_proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  state:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_shard_info/{block_id}:
    get:
      description: Get raw shard info
      operationId: getRawShardInfo
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
        - $ref: '#/components/parameters/workchainQuery'
        - $ref: '#/components/parameters/shardQuery'
        - $ref: '#/components/parameters/exactQuery'
      responses:
        '200':
          description: raw shard info
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - shardblk
                  - shard_proof
                  - shard_descr
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  shardblk:
                    $ref: '#/components/schemas/BlockRaw'
                  shard_proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  shard_descr:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_all_shards_info/{block_id}:
    get:
      description: Get all raw shards info
      operationId: getAllRawShardsInfo
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
      responses:
        '200':
          description: all raw shards info
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - proof
                  - data
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  data:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_transactions/{account_id}:
    get:
      description: Get raw transactions
      operationId: getRawTransactions
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/accountIDParameter'
        - $ref: '#/components/parameters/countQuery'
        - $ref: '#/components/parameters/ltMustQuery'
        - $ref: '#/components/parameters/hashQuery'
      responses:
        '200':
          description: raw transactions
          content:
            application/json:
              schema:
                type: object
                required:
                  - ids
                  - transactions
                properties:
                  ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/BlockRaw'
                  transactions:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/list_block_transactions/{block_id}:
    get:
      description: Get raw list block transactions
      operationId: getRawListBlockTransactions
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
        - $ref: '#/components/parameters/modeQuery'
        - $ref: '#/components/parameters/countQuery'
        - $ref: '#/components/parameters/accountIDQuery'
        - $ref: '#/components/parameters/ltQuery'
      responses:
        '200':
          description: a list of raw block transactions
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - req_count
                  - incomplete
                  - ids
                  - proof
                properties:
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  req_count:
                    type: integer
                    format: uint32
                    example: 100
                  incomplete:
                    type: boolean
                    example: true
                  ids:
                    type: array
                    items:
                      type: object
                      required:
                        - mode
                      properties:
                        mode:
                          type: integer
                          format: uint32
                          example: 0
                        account:
                          type: string
                          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                        lt:
                          type: integer
                          format: uint64
                        hash:
                          type: string
                          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_block_proof:
    get:
      description: Get raw block proof
      operationId: getRawBlockProof
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/knownBlockIDExtQuery'
        - $ref: '#/components/parameters/targetBlockIDExtQuery'
        - $ref: '#/components/parameters/modeQuery'
      responses:
        '200':
          description: raw block proof
          content:
            application/json:
              schema:
                type: object
                required:
                  - complete
                  - from
                  - to
                  - steps
                properties:
                  complete:
                    type: boolean
                    example: true
                  from:
                    $ref: '#/components/schemas/BlockRaw'
                  to:
                    $ref: '#/components/schemas/BlockRaw'
                  steps:
                    type: array
                    items:
                      type: object
                      required:
                        - lite_server_block_link_back
                        - lite_server_block_link_forward
                      properties:
                        lite_server_block_link_back:
                          type: object
                          required:
                            - to_key_block
                            - from
                            - to
                            - dest_proof
                            - proof
                            - state_proof
                          properties:
                            to_key_block:
                              type: boolean
                              example: false
                            from:
                              $ref: '#/components/schemas/BlockRaw'
                            to:
                              $ref: '#/components/schemas/BlockRaw'
                            dest_proof:
                              type: string
                              example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                            proof:
                              type: string
                              example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                            state_proof:
                              type: string
                              example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                        lite_server_block_link_forward:
                          type: object
                          required:
                            - to_key_block
                            - from
                            - to
                            - dest_proof
                            - config_proof
                            - signatures
                          properties:
                            to_key_block:
                              type: boolean
                              example: false
                            from:
                              $ref: '#/components/schemas/BlockRaw'
                            to:
                              $ref: '#/components/schemas/BlockRaw'
                            dest_proof:
                              type: string
                              example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                            config_proof:
                              type: string
                              example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                            signatures:
                              type: object
                              required:
                                - validator_set_hash
                                - catchain_seqno
                                - signatures
                              properties:
                                validator_set_hash:
                                  type: integer
                                  format: uint32
                                catchain_seqno:
                                  type: integer
                                  format: uint32
                                signatures:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - node_id_short
                                      - signature
                                    properties:
                                      node_id_short:
                                        type: string
                                        example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                                      signature:
                                        type: string
                                        example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_config_all/{block_id}:
    get:
      description: Get raw config
      operationId: getRawConfig
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
        - $ref: '#/components/parameters/modeQuery'
      responses:
        '200':
          description: raw config
          content:
            application/json:
              schema:
                type: object
                required:
                  - mode
                  - id
                  - state_proof
                  - config_proof
                properties:
                  mode:
                    type: integer
                    format: uint32
                    example: 0
                  id:
                    $ref: '#/components/schemas/BlockRaw'
                  state_proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
                  config_proof:
                    type: string
                    example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
  /v2/liteserver/get_shard_block_proof/{block_id}:
    get:
      description: Get raw shard block proof
      operationId: getRawShardBlockProof
      tags:
        - Lite Server
      parameters:
        - $ref: '#/components/parameters/blockchainBlockIDExtParameter'
      responses:
        '200':
          description: raw shard block proof
          content:
            application/json:
              schema:
                type: object
                required:
                  - masterchain_id
                  - links
                properties:
                  masterchain_id:
                    $ref: '#/components/schemas/BlockRaw'
                  links:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - proof
                      properties:
                        id:
                          $ref: '#/components/schemas/BlockRaw'
                        proof:
                          type: string
                          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        'default':
          $ref: '#/components/responses/Error'
components:
  parameters:
    masterchainSeqno:
      in: path
      name: masterchain_seqno
      required: true
      description: "masterchain block seqno"
      schema:
        type: integer
        format: int32
        example: 123456
    blockchainBlockIDParameter:
      in: path
      name: block_id
      required: true
      description: block ID
      schema:
        type: string
        example: (-1,8000000000000000,4234234)
    blockchainBlockIDExtParameter:
      in: path
      name: block_id
      required: true
      description: "block ID: (workchain,shard,seqno,root_hash,file_hash)"
      schema:
        type: string
        example: (-1,8000000000000000,4234234,3E575DAB1D25...90D8,47192E5C46C...BB29)
    transactionIDParameter:
      in: path
      name: transaction_id
      required: true
      description: transaction ID
      schema:
        type: string
        example: 97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    messageIDParameter:
      in: path
      name: msg_id
      required: true
      description: message ID
      schema:
        type: string
        example: 97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    accountIDParameter:
      in: path
      name: account_id
      required: true
      description: account ID
      schema:
        type: string
        example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    accountIDParameters:
      in: path
      name: account_ids
      required: true
      description: account ID
      explode: false
      schema:
        type: array
        items:
          type: string
          example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    jettonIDParameter:
      in: path
      name: jetton_id
      required: true
      description: jetton ID
      schema:
        type: string
        example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    methodNameParameter:
      in: path
      name: method_name
      required: true
      description: contract get method name
      schema:
        type: string
        example: get_wallet_address
    domainNameParameter:
      in: path
      name: domain_name
      required: true
      description: domain name with .ton or .t.me
      schema:
        type: string
        example: wallet.ton
    traceIDParameter:
      in: path
      name: trace_id
      required: true
      description: "trace ID or transaction hash in hex (without 0x) or base64url format"
      schema:
        type: string
        example: 97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    eventIDParameter:
      in: path
      name: event_id
      required: true
      description: "event ID or transaction hash in hex (without 0x) or base64url format"
      schema:
        type: string
        example: 97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    publicKeyParameter:
      in: path
      name: public_key
      required: true
      schema:
        type: string
        example: NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3...
    i18n:
      in: header
      name: Accept-Language
      required: false
      schema:
        type: string
        example: "ru-RU,ru;q=0.5"
        default: "en"
    limitQuery:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        default: 1000
        maximum: 1000
    offsetQuery:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        default: 0
    domainFilterQuery:
      in: query
      name: tld
      required: false
      description: domain filter for current auctions "ton" or "t.me"
      schema:
        type: string
        example: ton
    periodQuery:
      in: query
      name: period
      required: false
      description: "number of days before expiration"
      schema:
        type: integer
        minimum: 1
        maximum: 3660
    collectionQuery:
      in: query
      name: collection
      required: false
      description: "nft collection"
      schema:
        type: string
        example: "0:06d811f426598591b32b2c49f29f66c821368e4acb1de16762b04e0174532465"
    modeQuery:
      in: query
      name: mode
      required: true
      description: "mode"
      schema:
        type: integer
        format: uint32
        example: 0
    countQuery:
      in: query
      name: count
      required: true
      description: "count"
      schema:
        type: integer
        format: uint32
        example: 100
    knownBlockIDExtQuery:
      in: query
      name: known_block
      required: true
      description: "known block: (workchain,shard,seqno,root_hash,file_hash)"
      schema:
        type: string
        example: (-1,8000000000000000,4234234,3E575DAB1D25...90D8,47192E5C46C...BB29)
    targetBlockIDExtQuery:
      in: query
      name: target_block
      required: false
      description: "target block: (workchain,shard,seqno,root_hash,file_hash)"
      schema:
        type: string
        example: (-1,8000000000000000,4234234,3E575DAB1D25...90D8,47192E5C46C...BB29)
    ltMustQuery:
      in: query
      name: lt
      required: true
      description: "lt"
      schema:
        type: integer
        format: uint64
        example: 23814011000000
    ltQuery:
      in: query
      name: lt
      description: "lt"
      schema:
        type: integer
        format: uint64
        example: 23814011000000
    hashQuery:
      in: query
      name: hash
      required: true
      description: "hash"
      schema:
        type: string
        example: "131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85"
    workchainQuery:
      in: query
      name: workchain
      required: true
      description: "workchain"
      schema:
        type: integer
        format: uint32
        example: 1
    shardQuery:
      in: query
      name: shard
      required: true
      description: "shard"
      schema:
        type: integer
        format: uint64
        example: 1
    exactQuery:
      in: query
      name: exact
      required: true
      description: "exact"
      schema:
        type: boolean
        example: false
    accountIDQuery:
      in: query
      name: account_id
      required: false
      description: account ID
      explode: false
      schema:
        type: string
        example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    initiatorQuery:
      in: query
      name: initiator
      description: Show only events that are initiated by this account
      explode: false
      schema:
        type: boolean
        default: false
    currenciesQuery:
      in: query
      name: currencies
      description: accept ton and all possible fiat currencies, separated by commas
      required: false
      schema:
        type: string
        example: ton,usd,rub

  requestBodies:
    MethodParameters:
      description: input parameters for contract get method
      content:
        application/json:
          schema:
            type: object
    BatchBoc:
      description: both a single boc and a batch of boc serialized in base64 are accepted
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              boc:
                type: string
                example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg
              batch:
                type: array
                maxItems: 10
                items:
                  type: string
                  example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg
    EmulationBoc:
      description: bag-of-cells serialized to base64 and additional parameters to configure emulation
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - boc
            properties:
              boc:
                type: string
                example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg
              params:
                type: array
                description: additional per account configuration
                items:
                  type: object
                  required:
                  - address
                  properties:
                    address:
                      type: string
                      example: "0:97146a46acc2654y27947f14c4a4b14273e954f78bc017790b41208b0043200b"
                    balance:
                      type: integer
                      format: int64
                      example: 10000000000
    Boc:
      description: bag-of-cells serialized to base64
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - boc
            properties:
              boc:
                type: string
                example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg
    AccountIDs:
      description: a list of account ids
      content:
        application/json:
          schema:
            type: object
            required:
              - account_ids
            properties:
              account_ids:
                type: array
                items:
                  type: string
                  example: 0:97264395BD65A255A429B11326C84128B7D70FFED7949ABAE3036D506BA38621
    TonConnectProof:
      description: "Data that is expected from TON Connect"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - address
              - proof
            properties:
              address:
                type: string
                example: "0:97146a46acc2654y27947f14c4a4b14273e954f78bc017790b41208b0043200b"
              proof:
                type: object
                required:
                  - timestamp
                  - domain
                  - signature
                  - payload
                properties:
                  timestamp:
                    type: integer
                    format: int64
                    example: "1678275313"
                  domain:
                    type: object
                    required:
                      - value
                    properties:
                      length_bytes:
                        type: integer
                        format: uint32
                      value:
                        type: string
                  signature:
                    type: string
                  payload:
                    type: string
                    example: "84jHVNLQmZsAAAAAZB0Zryi2wqVJI-KaKNXOvCijEi46YyYzkaSHyJrMPBMOkVZa"
                  state_init:
                    type: string
    Backup:
      description: "Information for saving backup"
      required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    TonConnectStateInit:
      description: "Data that is expected"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - state_init
            properties:
              state_init:
                type: string
    LiteServerSendMessageRequest:
      description: "Data that is expected"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - body
            properties:
              body:
                type: string

  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: error description
    AccountAddress:
      type: object
      required:
        - address
        - is_scam
        - is_wallet
      properties:
        address:
          type: string
          example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        name:
          type: string
          example: Ton foundation
          description: Display name. Data collected from different sources like moderation lists, dns, collections names and over.
        is_scam:
          type: boolean
          example: true
          description: Is this account was marked as part of scammers activity
        icon:
          type: string
          example: https://ton.org/logo.png
        is_wallet:
          type: boolean
          example: true
    BlockCurrencyCollection:
      type: object
      required:
        - grams
        - other
      properties:
        grams:
          type: integer
          format: int64
          example: 10000000000
        other:
          type: array
          items:
            type: object
            required:
              - id
              - value
            properties:
              id:
                type: integer
                format: int64
                example: 13
              value:
                type: string
                example: "10000000000"
    BlockValueFlow:
      type: object
      required:
        - from_prev_blk
        - to_next_blk
        - imported
        - exported
        - fees_collected
        - fees_imported
        - recovered
        - created
        - minted
      properties:
        from_prev_blk:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        to_next_blk:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        imported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        exported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        fees_collected:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        burned:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        fees_imported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        recovered:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        created:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        minted:
          $ref: '#/components/schemas/BlockCurrencyCollection'

    BlockchainBlock:
      type: object
      required:
        - workchain_id
        - shard
        - seqno
        - root_hash
        - file_hash
        - global_id
        - value_flow
        - version
        - after_merge
        - before_split
        - after_split
        - want_split
        - want_merge
        - key_block
        - gen_utime
        - start_lt
        - end_lt
        - vert_seqno
        - gen_catchain_seqno
        - min_ref_mc_seqno
        - prev_key_block_seqno
        - prev_refs
        - in_msg_descr_length
        - out_msg_descr_length
        - rand_seed
        - created_by
      properties:
        value_flow:
          $ref: '#/components/schemas/BlockValueFlow'
        workchain_id:
          type: integer
          example: 0
          format: int32
        shard:
          type: string
          example: 8000000000000000
        seqno:
          type: integer
          example: 21734019
          format: int32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
        global_id:
          type: integer
          example: -239
          format: int32
        version:
          type: integer
          example: 0
          format: int32
        after_merge:
          type: boolean
          example: true
        before_split:
          type: boolean
          example: true
        after_split:
          type: boolean
          example: true
        want_split:
          type: boolean
          example: true
        want_merge:
          type: boolean
          example: true
        key_block:
          type: boolean
          example: true
        gen_utime:
          type: integer
          format: int64
          example: 1674826775
        start_lt:
          type: integer
          format: int64
          example: 23814011000000
        end_lt:
          type: integer
          format: int64
          example: 23814011000001
        vert_seqno:
          type: integer
          example: 0
          format: int32
        gen_catchain_seqno:
          type: integer
          example: 0
          format: int32
        min_ref_mc_seqno:
          type: integer
          example: 0
          format: int32
        prev_key_block_seqno:
          type: integer
          example: 0
          format: int32
        gen_software_version:
          type: integer
          example: 0
          format: int32
        gen_software_capabilities:
          type: integer
          format: int64
          example: 0
        master_ref:
          type: string
          example: (-1,4234234,8000000000000000)
        prev_refs:
          type: array
          items:
            type: string
            example: [ (-1,4234235,8000000000000000) ]
        in_msg_descr_length:
          type: integer
          format: int64
          example: 0
        out_msg_descr_length:
          type: integer
          format: int64
          example: 0
        rand_seed:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        created_by:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    BlockchainBlocks:
      type: object
      required:
        - blocks
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainBlock'
    BlockchainBlockShards:
      type: object
      required:
        - shards
      properties:
        shards:
          type: array
          items:
            type: object
            required:
              - last_known_block_id
            properties:
              last_known_block_id:
                type: string
                example: (0,8000000000000000,4234234)
    AccountStatus:
      type: string
      example: active
      enum:
        - nonexist
        - uninit
        - active
        - frozen
    StateInit:
      type: object
      required:
        - boc
      properties:
        boc:
          type: string
          example: te6ccgEBBgEARAABFP8A9KQT9LzyyAsBAgEgAgMCAUgEBQAE8jAAONBsIdMfMO1E0NM/MAHAAZekyMs/ye1UkzDyBuIAEaE0MdqJoaZ+YQ==
    Message:
      type: object
      required:
        - msg_type
        - created_lt
        - ihr_disabled
        - bounce
        - bounced
        - value
        - fwd_fee
        - ihr_fee
        - import_fee
        - created_at
      properties:
        msg_type:
          type: string
          example: int_msg
          enum:
            - int_msg
            - ext_in_msg
            - ext_out_msg
        created_lt:
          type: integer
          format: int64
          example: 25713146000001
        ihr_disabled:
          type: boolean
          example: true
        bounce:
          type: boolean
          example: true
        bounced:
          type: boolean
          example: true
        value:
          type: integer
          format: int64
          example: 60000000
        fwd_fee:
          type: integer
          format: int64
          example: 5681002
        ihr_fee:
          type: integer
          format: int64
          example: 5681002
        destination:
          $ref: '#/components/schemas/AccountAddress'
        source:
          $ref: '#/components/schemas/AccountAddress'
        import_fee:
          type: integer
          format: int64
          example: 5681002
        created_at:
          type: integer
          format: int64
          example: 5681002
        op_code:
          type: string
          example: "0xdeadbeaf"
        init:
          $ref: '#/components/schemas/StateInit'
        raw_body:
          type: string
          description: hex-encoded BoC with raw message body
          example: "B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218"
        decoded_op_name:
          type: string
          example: "nft_transfer"
        decoded_body: { } # Free-form JSON value
    TransactionType:
      type: string
      example: TransOrd
      enum:
        - TransOrd
        - TransTickTock
        - TransSplitPrepare
        - TransSplitInstall
        - TransMergePrepare
        - TransMergeInstall
        - TransStorage
    AccStatusChange:
      type: string
      example: acst_unchanged
      enum:
        - acst_unchanged
        - acst_frozen
        - acst_deleted
    ComputeSkipReason:
      type: string
      example: cskip_no_state
      enum:
        - cskip_no_state
        - cskip_bad_state
        - cskip_no_gas
    BouncePhaseType:
      type: string
      example: cskip_no_state
      enum:
        - TrPhaseBounceNegfunds
        - TrPhaseBounceNofunds
        - TrPhaseBounceOk
    ComputePhase:
      type: object
      required:
        - skipped
      properties:
        skipped:
          type: boolean
          example: true
        skip_reason:
          $ref: '#/components/schemas/ComputeSkipReason'
        success:
          type: boolean
          example: true
        gas_fees:
          type: integer
          format: int64
          example: 1000
        gas_used:
          type: integer
          format: int64
          example: 10000
        vm_steps:
          type: integer
          format: uint32
          example: 5
        exit_code:
          type: integer
          format: int32
          example: 0
    StoragePhase:
      type: object
      required:
        - fees_collected
        - status_change
      properties:
        fees_collected:
          type: integer
          format: int64
          example: 25713146000001
        fees_due:
          type: integer
          format: int64
          example: 25713146000001
        status_change:
          $ref: '#/components/schemas/AccStatusChange'
    CreditPhase:
      type: object
      required:
        - fees_collected
        - credit
      properties:
        fees_collected:
          type: integer
          format: int64
          example: 100
        credit:
          type: integer
          format: int64
          example: 1000
    ActionPhase:
      type: object
      required:
        - success
        - total_actions
        - skipped_actions
        - fwd_fees
        - total_fees
      properties:
        success:
          type: boolean
          example: true
        total_actions:
          type: integer
          format: int32
          example: 5
        skipped_actions:
          type: integer
          format: int32
          example: 5
        fwd_fees:
          type: integer
          format: int64
          example: 1000
        total_fees:
          type: integer
          format: int64
          example: 1000
    Transaction:
      type: object
      required:
        - hash
        - lt
        - account
        - success
        - utime
        - orig_status
        - end_status
        - total_fees
        - transaction_type
        - state_update_old
        - state_update_new
        - out_msgs
        - block
        - aborted
        - destroyed
      properties:
        hash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        lt:
          type: integer
          format: int64
          example: 25713146000001
        account:
          $ref: '#/components/schemas/AccountAddress'
        success:
          type: boolean
          example: true
        utime:
          type: integer
          format: int64
          example: 1645544908
        orig_status:
          $ref: '#/components/schemas/AccountStatus'
        end_status:
          $ref: '#/components/schemas/AccountStatus'
        total_fees:
          type: integer
          format: int64
          example: 25713146000001
        transaction_type:
          $ref: '#/components/schemas/TransactionType'
        state_update_old:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        state_update_new:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        in_msg:
          $ref: '#/components/schemas/Message'
        out_msgs:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        block:
          type: string
          example: (-1,4234234,8000000000000000)
        prev_trans_hash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        prev_trans_lt:
          type: integer
          format: int64
          example: 25713146000001
        compute_phase:
          $ref: '#/components/schemas/ComputePhase'
        storage_phase:
          $ref: '#/components/schemas/StoragePhase'
        credit_phase:
          $ref: '#/components/schemas/CreditPhase'
        action_phase:
          $ref: '#/components/schemas/ActionPhase'
        bounce_phase:
          $ref: '#/components/schemas/BouncePhaseType'
        aborted:
          type: boolean
          example: true
        destroyed:
          type: boolean
          example: true
    Transactions:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    ConfigProposalSetup:
      type: object
      required:
        - min_tot_rounds
        - max_tot_rounds
        - min_wins
        - max_losses
        - min_store_sec
        - max_store_sec
        - bit_price
        - cell_price
      properties:
        min_tot_rounds:
          type: integer
          example: 2
        max_tot_rounds:
          type: integer
          example: 6
        min_wins:
          type: integer
          example: 2
        max_losses:
          type: integer
          example: 6
        min_store_sec:
          type: integer
          format: int64
          example: 1000000
        max_store_sec:
          type: integer
          format: int64
          example: 10000000
        bit_price:
          type: integer
          format: int64
          example: 1
        cell_price:
          type: integer
          format: int64
          example: 500
    GasLimitPrices:
      type: object
      required:
        - gas_price
        - gas_limit
        - gas_credit
        - block_gas_limit
        - freeze_due_limit
        - delete_due_limit
      properties:
        special_gas_limit:
          type: integer
          format: int64
        flat_gas_limit:
          type: integer
          format: int64
        flat_gas_price:
          type: integer
          format: int64
        gas_price:
          type: integer
          format: int64
          example: 1
        gas_limit:
          type: integer
          format: int64
          example: 1000000
        gas_credit:
          type: integer
          format: int64
          example: 1000000
        block_gas_limit:
          type: integer
          format: int64
          example: 1000000
        freeze_due_limit:
          type: integer
          format: int64
          example: 1000000
        delete_due_limit:
          type: integer
          format: int64
          example: 1000000
    BlockParamLimits:
      type: object
      required:
        - underload
        - soft_limit
        - hard_limit
      properties:
        underload:
          type: integer
          format: int64
          example: 1000000
        soft_limit:
          type: integer
          format: int64
          example: 1000000
        hard_limit:
          type: integer
          format: int64
          example: 1000000
    BlockLimits:
      type: object
      required:
        - bytes
        - gas
        - lt_delta
      properties:
        bytes:
          $ref: '#/components/schemas/BlockParamLimits'
        gas:
          $ref: '#/components/schemas/BlockParamLimits'
        lt_delta:
          $ref: '#/components/schemas/BlockParamLimits'
    MsgForwardPrices:
      type: object
      required:
        - lump_price
        - bit_price
        - cell_price
        - ihr_price_factor
        - first_frac
        - next_frac
      properties:
        lump_price:
          type: integer
          format: int64
          example: 1000000
        bit_price:
          type: integer
          format: int64
          example: 1000000
        cell_price:
          type: integer
          format: int64
          example: 1000000
        ihr_price_factor:
          type: integer
          format: int64
          example: 1000000
        first_frac:
          type: integer
          format: int64
          example: 1000000
        next_frac:
          type: integer
          format: int64
          example: 1000000
    WorkchainDescr:
      type: object
      required:
        - workchain
        - enabled_since
        - actual_min_split
        - min_split
        - max_split
        - basic
        - active
        - accept_msgs
        - flags
        - zerostate_root_hash
        - zerostate_file_hash
        - version
      properties:
        workchain:
          type: integer
          format: int
          example: 0
        enabled_since:
          type: integer
          format: int64
          example: 1000000
        actual_min_split:
          type: integer
          format: int
          example: 1000000
        min_split:
          type: integer
          format: int
          example: 1000000
        max_split:
          type: integer
          format: int
          example: 1000000
        basic:
          type: integer
          example: 1000000
        active:
          type: boolean
          example: true
        accept_msgs:
          type: boolean
          example: true
        flags:
          type: integer
          format: int
          example: 1000000
        zerostate_root_hash:
          type: string
          example: 1000000
        zerostate_file_hash:
          type: string
          example: 1000000
        version:
          type: integer
          format: int64
          example: 1000000
    MisbehaviourPunishmentConfig:
      type: object
      required:
        - default_flat_fine
        - default_proportional_fine
        - severity_flat_mult
        - severity_proportional_mult
        - unpunishable_interval
        - long_interval
        - long_flat_mult
        - long_proportional_mult
        - medium_interval
        - medium_flat_mult
        - medium_proportional_mult
      properties:
        default_flat_fine:
          type: integer
          format: int64
          example: 1000000
        default_proportional_fine:
          type: integer
          format: int64
          example: 1000000
        severity_flat_mult:
          type: integer
          example: 1000000
        severity_proportional_mult:
          type: integer
          example: 1000000
        unpunishable_interval:
          type: integer
          example: 1000000
        long_interval:
          type: integer
          example: 1000000
        long_flat_mult:
          type: integer
          example: 1000000
        long_proportional_mult:
          type: integer
          example: 1000000
        medium_interval:
          type: integer
          example: 1000000
        medium_flat_mult:
          type: integer
          example: 1000000
        medium_proportional_mult:
          type: integer
          example: 1000000

    SizeLimitsConfig:
      type: object
      required:
        - max_msg_bits
        - max_msg_cells
        - max_library_cells
        - max_vm_data_depth
        - max_ext_msg_size
        - max_ext_msg_depth
      properties:
        max_msg_bits:
          type: integer
          format: int64
          example: 1000000
        max_msg_cells:
          type: integer
          format: int64
          example: 1000000
        max_library_cells:
          type: integer
          format: int64
          example: 1000000
        max_vm_data_depth:
          type: integer
          format: int
          example: 1000000
        max_ext_msg_size:
          type: integer
          format: int64
          example: 1000000
        max_ext_msg_depth:
          type: integer
          format: int
          example: 1000000
        max_acc_state_cells:
          type: integer
          format: int64
          example: 1000000
        max_acc_state_bits:
          type: integer
          format: int64
          example: 1000000
    ValidatorsSet:
      type: object
      required:
        - utime_since
        - utime_until
        - total
        - main
        - list
      properties:
        utime_since:
          type: integer
        utime_until:
          type: integer
        total:
          type: integer
        main:
          type: integer
        total_weight:
          type: integer
          format: int64
        list:
          type: array
          items:
            type: object
            required:
              - public_key
              - weight
            properties:
              public_key:
                type: string
              weight:
                type: integer
                format: int64
              adnl_addr:
                type: string
    Oracle:
      type: object
      required:
        - address
        - secp_pubkey
      properties:
        address:
          type: string
          example: 0:55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        secp_pubkey:
          type: string
          example: 00000000000000000000000017dcab1b1481610f6c7a7a98cf0370dc0ec704a6
    OracleBridgeParams:
      type: object
      required:
        - bridge_addr
        - oracle_multisig_address
        - external_chain_address
        - oracles
      properties:
        bridge_addr:
          type: string
        oracle_multisig_address:
          type: string
        external_chain_address:
          type: string
        oracles:
          type: array
          items:
            $ref: '#/components/schemas/Oracle'
    JettonBridgePrices:
      type: object
      required:
        - bridge_burn_fee
        - bridge_mint_fee
        - wallet_min_tons_for_storage
        - wallet_gas_consumption
        - minter_min_tons_for_storage
        - discover_gas_consumption
      properties:
        bridge_burn_fee:
          type: integer
          format: int64
        bridge_mint_fee:
          type: integer
          format: int64
        wallet_min_tons_for_storage:
          type: integer
          format: int64
        wallet_gas_consumption:
          type: integer
          format: int64
        minter_min_tons_for_storage:
          type: integer
          format: int64
        discover_gas_consumption:
          type: integer
          format: int64
    JettonBridgeParams:
      type: object
      required:
        - bridge_address
        - oracles_address
        - state_flags
        - oracles
      properties:
        bridge_address:
          type: string
        oracles_address:
          type: string
        state_flags:
          type: integer
        burn_bridge_fee:
          type: integer
          format: int64
        oracles:
          type: array
          items:
            $ref: '#/components/schemas/Oracle'
        external_chain_address:
          type: string
        prices:
          $ref: '#/components/schemas/JettonBridgePrices'
    Validator:
      type: object
      required:
        - address
        - adnl_address
        - stake
        - max_factor
      properties:
        address:
          type: string
          example: 0:55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        adnl_address:
          type: string
          example: 10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        stake:
          type: integer
          format: int64
          example: 123456789
        max_factor:
          type: integer
          format: int64
          example: 123456789
    Validators:
      type: object
      required:
        - validators
        - elect_at
        - elect_close
        - min_stake
        - total_stake
      properties:
        elect_at:
          type: integer
          format: int64
          example: 123456789
        elect_close:
          type: integer
          format: int64
          example: 123456789
        min_stake:
          type: integer
          format: int64
          example: 123456789
        total_stake:
          type: integer
          format: int64
          example: 123456789
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
    AccountStorageInfo:
      type: object
      required:
        - used_cells
        - used_bits
        - used_public_cells
        - last_paid
        - due_payment
      properties:
        used_cells:
          type: integer
          format: int64
          example: 567
        used_bits:
          type: integer
          format: int64
          example: 567
        used_public_cells:
          type: integer
          format: int64
          example: 567
        last_paid:
          type: integer
          format: int64
          example: 567
        due_payment:
          type: integer
          format: int64
          example: 567
    BlockchainRawAccount:
      type: object
      required:
        - address
        - balance
        - status
        - last_transaction_lt
        - storage
      properties:
        address:
          type: string
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        balance:
          type: integer
          format: int64
          example: 123456789
        extra_balance:
          type: object
          additionalProperties:
            type: string
        code:
          type: string
          example: b5ee9c72410104010087000114ff00f4a413f4a0f2c80b0102012002030002d200dfa5ffff76a268698fe9ffe8e42c5267858f90e785ffe4f6aa6467c444ffb365ffc10802faf0807d014035e7a064b87d804077e7857fc10803dfd2407d014035e7a064b86467cd8903a32b9ba4410803ade68afd014035e7a045ea432b6363796103bb7b9363210c678b64b87d807d8040c249b3e4
        data:
          type: string
          example: b5ee9c7241010101002600004811fd096c0000000000000000000000000000000000000000000000000000000000000000cb78264d
        last_transaction_lt:
          type: integer
          format: int64
          example: 123456789
        status:
          type: string
          example: active
        storage:
          $ref: '#/components/schemas/AccountStorageInfo'
    Account:
      type: object
      required:
        - address
        - balance
        - status
        - last_activity
        - get_methods
        - is_wallet
      properties:
        address:
          type: string
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        balance:
          type: integer
          format: int64
          example: 123456789
        last_activity:
          type: integer
          description: unix timestamp
          format: int64
          example: 123456789
        status:
          type: string
          example: active
        interfaces:
          type: array
          items:
            type: string
            example: nft_sale
        name:
          type: string
          example: "Ton foundation"
        is_scam:
          type: boolean
          example: true
        icon:
          type: string
          example: "https://ton.org/logo.png"
        memo_required:
          type: boolean
          example: true
        get_methods:
          type: array
          items:
            type: string
          example: [ 'get_item_data' ]
        is_suspended:
          type: boolean
        is_wallet:
          type: boolean
    Accounts:
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    MethodExecutionResult:
      type: object
      required:
        - success
        - exit_code
        - stack
      properties:
        success:
          type: boolean
          example: true
        exit_code:
          type: integer
          example: 0
          description: tvm exit code
        stack:
          type: array
          items:
            $ref: "#/components/schemas/TvmStackRecord"
        decoded: { } # Free-form JSON value
    TvmStackRecord:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          example: "cell"
          enum:
            - cell
            - num
            - nan
            - "null"
            - tuple
        cell:
          type: string
          example: "te6cckEBAQEAJAAAQ4ARPeUceMlv4l12d6jdLpIzzbAV6amYXNZeZK2aicQdC/Apj8aJ"
        slice:
          type: string
          example: ""
        num:
          type: string
          example: ""
        tuple:
          type: array
          example: [ ]
          items:
            $ref: '#/components/schemas/TvmStackRecord'
    RawBlockchainConfig:
      type: object
      required:
        - config
      properties:
        config:
          type: object
          additionalProperties: true
          example: { }

    BlockchainConfig:
      type: object
      required:
        - raw
        - "0"
        - "1"
        - "2"
        - "4"
        - "44"
      properties:
        raw:
          type: string
          description: config boc in base64 format
          example: te6ccgEBBgEARAABFP8A9KQT9LzyyAsBAgEgAgMCAUgEBQAE8jAAONBsIdMfMO1E0NM/MAHAAZekyMs/ye1UkzDyBuIAEaE0MdqJoaZ+YQ==
        "0":
          type: string
          description: "config address"
        "1":
          type: string
          description: "elector address"
        "2":
          type: string
          description: "minter address"
        "3":
          type: string
          description: "The address of the transaction fee collector."
        "4":
          type: string
          description: "dns root address"
        "5":
          type: object
          required:
            - fee_burn_nom
            - fee_burn_denom
          properties:
            blackhole_addr:
              type: string
            fee_burn_nom:
              type: integer
              format: int64
            fee_burn_denom:
              type: integer
              format: int64
        "6":
          type: object
          description: Minting fees of new currencies.
          required:
            - mint_new_price
            - mint_add_price
          properties:
            mint_new_price:
              type: integer
              format: int64
            mint_add_price:
              type: integer
              format: int64
        "7":
          type: object
          description: The volume of each of the additional currencies in circulation.
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                type: object
                required:
                  - currency_id
                  - amount
                properties:
                  currency_id:
                    type: integer
                    format: int64
                  amount:
                    type: string
        "8":
          type: object
          description: The network version and additional capabilities supported by the validators.
          required:
            - version
            - capabilities
          properties:
            version:
              type: integer
              format: int64
            capabilities:
              type: integer
              format: int64
        "9":
          type: object
          description: List of mandatory parameters of the blockchain config.
          required:
            - mandatory_params
          properties:
            mandatory_params:
              type: array
              items:
                type: integer
                format: int32
        "10":
          type: object
          description: List of critical TON parameters, the change of which significantly affects the network, so more voting rounds are held.
          required:
            - critical_params
          properties:
            critical_params:
              type: array
              items:
                type: integer
                format: int32
        "11":
          type: object
          description: This parameter indicates under what conditions proposals to change the TON configuration are accepted.
          required:
            - normal_params
            - critical_params
          properties:
            normal_params:
              $ref: '#/components/schemas/ConfigProposalSetup'
            critical_params:
              $ref: '#/components/schemas/ConfigProposalSetup'
        "12":
          type: object
          description: Workchains in the TON Blockchain
          required:
            - workchains
          properties:
            workchains:
              type: array
              items:
                $ref: '#/components/schemas/WorkchainDescr'
        "13":
          type: object
          description: The cost of filing complaints about incorrect operation of validators.
          required:
            - deposit
            - bit_price
            - cell_price
          properties:
            deposit:
              type: integer
              format: int64
            bit_price:
              type: integer
              format: int64
            cell_price:
              type: integer
              format: int64
        "14":
          type: object
          description: The reward in nanoTons for block creation in the TON blockchain.
          required:
            - masterchain_block_fee
            - basechain_block_fee
          properties:
            masterchain_block_fee:
              type: integer
              format: int64
            basechain_block_fee:
              type: integer
              format: int64
        "15":
          type: object
          description: The reward in nanoTons for block creation in the TON blockchain.
          required:
            - validators_elected_for
            - elections_start_before
            - elections_end_before
            - stake_held_for
          properties:
            validators_elected_for:
              type: integer
              format: int64
              example: 65536
            elections_start_before:
              type: integer
              format: int64
              example: 32768
            elections_end_before:
              type: integer
              format: int64
              example: 8192
            stake_held_for:
              type: integer
              format: int64
              example: 32768
        "16":
          type: object
          description: The limits on the number of validators in the TON blockchain.
          required:
            - max_validators
            - max_main_validators
            - min_validators
          properties:
            max_validators:
              type: integer
              example: 400
            max_main_validators:
              type: integer
              example: 100
            min_validators:
              type: integer
              example: 75
        "17":
          type: object
          description: The stake parameters configuration in the TON blockchain.
          required:
            - min_stake
            - max_stake
            - min_total_stake
            - max_stake_factor
          properties:
            min_stake:
              type: string
            max_stake:
              type: string
            min_total_stake:
              type: string
            max_stake_factor:
              type: integer
              format: int64
        "18":
          type: object
          description: The prices for data storage.
          required:
            - storage_prices
          properties:
            storage_prices:
              type: array
              items:
                type: object
                required:
                  - utime_since
                  - bit_price_ps
                  - cell_price_ps
                  - mc_bit_price_ps
                  - mc_cell_price_ps
                properties:
                  utime_since:
                    type: integer
                    format: int64
                    example: 0
                  bit_price_ps:
                    type: integer
                    format: int64
                    example: 1
                  cell_price_ps:
                    type: integer
                    format: int64
                    example: 500
                  mc_bit_price_ps:
                    type: integer
                    format: int64
                    example: 1000
                  mc_cell_price_ps:
                    type: integer
                    format: int64
                    example: 500000
        "20":
          type: object
          description: The cost of computations in the masterchain. The complexity of any computation is estimated in gas units.
          required:
            - gas_limits_prices
          properties:
            gas_limits_prices:
              $ref: '#/components/schemas/GasLimitPrices'
        "21":
          type: object
          description: The cost of computations in the basechains. The complexity of any computation is estimated in gas units.
          required:
            - gas_limits_prices
          properties:
            gas_limits_prices:
              $ref: '#/components/schemas/GasLimitPrices'
        "22":
          type: object
          description: The limits on the block in the masterchain, upon reaching which the block is finalized and the callback of the remaining messages (if any) is carried over to the next block.
          required:
            - block_limits
          properties:
            block_limits:
              $ref: '#/components/schemas/BlockLimits'
        "23":
          type: object
          description: The limits on the block in the basechains, upon reaching which the block is finalized and the callback of the remaining messages (if any) is carried over to the next block.
          required:
            - block_limits
          properties:
            block_limits:
              $ref: '#/components/schemas/BlockLimits'
        "24":
          type: object
          description: The cost of sending messages in the masterchain of the TON blockchain.
          required:
            - msg_forward_prices
          properties:
            msg_forward_prices:
              $ref: '#/components/schemas/MsgForwardPrices'
        "25":
          type: object
          description: The cost of sending messages in the basechains of the TON blockchain.
          required:
            - msg_forward_prices
          properties:
            msg_forward_prices:
              $ref: '#/components/schemas/MsgForwardPrices'
        "28":
          type: object
          description: The configuration for the Catchain protocol.
          required:
            - mc_catchain_lifetime
            - shard_catchain_lifetime
            - shard_validators_lifetime
            - shard_validators_num
          properties:
            mc_catchain_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_catchain_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_validators_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_validators_num:
              type: integer
              format: int64
              example: 1000000
            flags:
              type: integer
              format: int
              example: 1000000
            shuffle_mc_validators:
              type: boolean
        "29":
          type: object
          description: The configuration for the consensus protocol above catchain.
          required:
            - round_candidates
            - next_candidate_delay_ms
            - consensus_timeout_ms
            - fast_attempts
            - attempt_duration
            - catchain_max_deps
            - max_block_bytes
            - max_collated_bytes
          properties:
            flags:
              type: integer
              format: int
              example: 0
            new_catchain_ids:
              type: boolean
              example: true
            round_candidates:
              type: integer
              format: int64
              example: 3
            next_candidate_delay_ms:
              type: integer
              format: int64
              example: 2000
            consensus_timeout_ms:
              type: integer
              format: int64
              example: 16000
            fast_attempts:
              type: integer
              format: int64
              example: 3
            attempt_duration:
              type: integer
              format: int64
              example: 8
            catchain_max_deps:
              type: integer
              format: int64
              example: 4
            max_block_bytes:
              type: integer
              format: int64
              example: 2097152
            max_collated_bytes:
              type: integer
              format: int64
              example: 2097152
            proto_version:
              type: integer
              format: int64
              example: 2
            catchain_max_blocks_coeff:
              type: integer
              format: int64
              example: 10000
        "31":
          type: object
          description: The configuration for the consensus protocol above catchain.
          required:
            - fundamental_smc_addr
          properties:
            fundamental_smc_addr:
              type: array
              items:
                type: string
                example: -1:dd24c4a1f2b88f8b7053513b5cc6c5a31bc44b2a72dcb4d8c0338af0f0d37ec5
        "32":
          $ref: '#/components/schemas/ValidatorsSet'
        "33":
          $ref: '#/components/schemas/ValidatorsSet'
        "34":
          $ref: '#/components/schemas/ValidatorsSet'
        "35":
          $ref: '#/components/schemas/ValidatorsSet'
        "36":
          $ref: '#/components/schemas/ValidatorsSet'
        "37":
          $ref: '#/components/schemas/ValidatorsSet'
        "40":
          type: object
          description: The configuration for punishment for improper behavior (non-validation). In the absence of the parameter, the default fine size is 101 TON
          required:
            - misbehaviour_punishment_config
          properties:
            misbehaviour_punishment_config:
              $ref: '#/components/schemas/MisbehaviourPunishmentConfig'
        "43":
          type: object
          description: The size limits and some other characteristics of accounts and messages.
          required:
            - size_limits_config
          properties:
            size_limits_config:
              $ref: '#/components/schemas/SizeLimitsConfig'
        "44":
          type: object
          description: suspended accounts
          required:
            - accounts
            - suspended_until
          properties:
            accounts:
              type: array
              items:
                type: string
            suspended_until:
              type: integer
        "71":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "72":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "73":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "79":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
        "81":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
        "82":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
    DomainNames:
      type: object
      required:
        - domains
      properties:
        domains:
          type: array
          items:
            type: string
            example: vasya.ton
    DomainBid:
      type: object
      required:
        - success
        - value
        - txTime
        - bidder
        - txHash
      properties:
        success:
          type: boolean
          example: true
          default: false
        value:
          type: integer
          format: int64
          example: 1660050553
        txTime:
          type: integer
          format: int64
          example: 1660050553
        txHash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        bidder:
          $ref: '#/components/schemas/AccountAddress'
    DomainBids:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainBid'
    JettonVerificationType:
      type: string
      enum:
        - whitelist
        - blacklist
        - none
    JettonPreview:
      type: object
      required:
        - address
        - name
        - symbol
        - decimals
        - verification
        - image
      properties:
        address:
          type: string
          example: 0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0
        name:
          type: string
          example: Wrapped TON
        symbol:
          type: string
          example: WTON
        decimals:
          type: integer
          example: 9
        image:
          type: string
          example: https://cache.tonapi.io/images/jetton.jpg
        verification:
          $ref: '#/components/schemas/JettonVerificationType'
    JettonBalance:
      type: object
      required:
        - balance
        - wallet_address
        - jetton
      properties:
        balance:
          type: string
          example: 597968399
        price:
          $ref: '#/components/schemas/TokenRates'
        wallet_address:
          $ref: '#/components/schemas/AccountAddress'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    JettonsBalances:
      type: object
      required:
        - balances
      properties:
        balances:
          type: array
          items:
            $ref: '#/components/schemas/JettonBalance'
    Price:
      type: object
      required:
        - value
        - token_name
      properties:
        value:
          type: string
          example: 123000000000
        token_name:
          type: string
          example: TON
    ImagePreview:
      type: object
      required:
        - resolution
        - url
      properties:
        resolution:
          type: string
          example: "100x100"
        url:
          type: string
          example: "https://site.com/pic1.jpg"
    NftApprovedBy:
      type: array
      items:
        type: string
        example: getgems
        enum:
          - getgems
          - tonkeeper
          - ton.diamonds
    Sale:
      type: object
      required:
        - address
        - market
        - price
      properties:
        address:
          type: string
          example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        market:
          $ref: '#/components/schemas/AccountAddress'
        owner:
          $ref: '#/components/schemas/AccountAddress'
        price:
          $ref: '#/components/schemas/Price'
    NftItem:
      type: object
      required:
        - address
        - index
        - verified
        - metadata
        - approved_by
      properties:
        address:
          type: string
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        index:
          type: integer
          format: int64
          example: 58
        owner:
          $ref: '#/components/schemas/AccountAddress'
        collection:
          type: object
          required:
            - address
            - name
            - description
          properties:
            address:
              type: string
              example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
            name:
              type: string
              example: TON Diamonds
            description:
              type: string
              example: "Best collection in TON network"
        verified:
          type: boolean
          example: true
        metadata:
          type: object
          additionalProperties: true
          example: { }
        sale:
          $ref: '#/components/schemas/Sale'
        previews:
          type: array
          items:
            $ref: '#/components/schemas/ImagePreview'
        dns:
          type: string
          example: crypto.ton
        approved_by:
          $ref: '#/components/schemas/NftApprovedBy'
    NftItems:
      type: object
      required:
        - nft_items
      properties:
        nft_items:
          type: array
          items:
            $ref: '#/components/schemas/NftItem'
    Refund:
      type: object
      required:
        - type
        - origin
      properties:
        type:
          type: string
          example: DNS.ton
          enum:
            - DNS.ton
            - DNS.tg
            - GetGems
        origin:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
    ValueFlow:
      type: object
      required:
        - account
        - ton
        - fees
      properties:
        account:
          $ref: '#/components/schemas/AccountAddress'
        ton:
          type: integer
          format: int64
          example: 80
        fees:
          type: integer
          format: int64
          example: 10
        jettons:
          type: array
          items:
            type: object
            required:
              - account
              - quantity
              - jetton
            properties:
              account:
                $ref: '#/components/schemas/AccountAddress'
              jetton:
                $ref: '#/components/schemas/JettonPreview'
              quantity:
                type: integer
                format: int64
                example: 10
    Action:
      type: object
      required:
        - type
        - status
        - simple_preview
      properties:
        type:
          type: string
          example: "TonTransfer"
          enum:
            - TonTransfer
            - JettonTransfer
            - JettonBurn
            - JettonMint
            - NftItemTransfer
            - ContractDeploy
            - Subscribe
            - UnSubscribe
            - AuctionBid
            - NftPurchase
            - DepositStake
            - WithdrawStake
            - WithdrawStakeRequest
            - JettonSwap
            - SmartContractExec
            - ElectionsRecoverStake
            - ElectionsDepositStake
            - DomainRenew
            - Unknown
        status:
          type: string
          example: "ok"
          enum:
            - ok
            - failed
        TonTransfer:
          $ref: '#/components/schemas/TonTransferAction'
        ContractDeploy:
          $ref: '#/components/schemas/ContractDeployAction'
        JettonTransfer:
          $ref: '#/components/schemas/JettonTransferAction'
        JettonBurn:
          $ref: '#/components/schemas/JettonBurnAction'
        JettonMint:
          $ref: '#/components/schemas/JettonMintAction'
        NftItemTransfer:
          $ref: '#/components/schemas/NftItemTransferAction'
        Subscribe:
          $ref: '#/components/schemas/SubscriptionAction'
        UnSubscribe:
          $ref: '#/components/schemas/UnSubscriptionAction'
        AuctionBid:
          $ref: '#/components/schemas/AuctionBidAction'
        NftPurchase:
          $ref: '#/components/schemas/NftPurchaseAction'
        DepositStake:
          $ref: '#/components/schemas/DepositStakeAction'
        WithdrawStake:
          $ref: '#/components/schemas/WithdrawStakeAction'
        WithdrawStakeRequest:
          $ref: '#/components/schemas/WithdrawStakeRequestAction'
        ElectionsDepositStake:
          $ref: '#/components/schemas/ElectionsDepositStakeAction'
        ElectionsRecoverStake:
          $ref: '#/components/schemas/ElectionsRecoverStakeAction'
        JettonSwap:
          $ref: '#/components/schemas/JettonSwapAction'
        SmartContractExec:
          $ref: '#/components/schemas/SmartContractAction'
        DomainRenew:
          $ref: '#/components/schemas/DomainRenewAction'
        simple_preview:
          $ref: '#/components/schemas/ActionSimplePreview'
    TonTransferAction:
      type: object
      required:
        - sender
        - recipient
        - amount
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: integer
          description: amount in nanotons
          format: int64
          example: 123456789
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        refund:
          $ref: '#/components/schemas/Refund'
    SmartContractAction:
      type: object
      required:
        - executor
        - contract
        - ton_attached
        - operation
      properties:
        executor:
          $ref: '#/components/schemas/AccountAddress'
        contract:
          $ref: '#/components/schemas/AccountAddress'
        ton_attached:
          type: integer
          description: amount in nanotons
          format: int64
          example: 123456789
        operation:
          type: string
          example: "NftTransfer or 0x35d95a12"
        payload:
          type: string
        refund:
          $ref: '#/components/schemas/Refund'
    DomainRenewAction:
      type: object
      required:
        - domain
        - contract_address
        - renewer
      properties:
        domain:
          type: string
          example: "vasya.ton"
        contract_address:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        renewer:
          $ref: '#/components/schemas/AccountAddress'
    NftItemTransferAction:
      type: object
      required:
        - nft
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        nft:
          type: string
          example: ""
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        payload:
          type: string
          description: raw hex encoded payload
          example: '0234de3e21d21b3ee21f3'
        refund:
          $ref: '#/components/schemas/Refund'
    JettonTransferAction:
      type: object
      required:
        - amount
        - jetton
        - senders_wallet
        - recipients_wallet
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        senders_wallet:
          type: string
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        recipients_wallet:
          type: string
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          description: amount in quanta of tokens
          example: 1000000000
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        refund:
          $ref: '#/components/schemas/Refund'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    JettonBurnAction:
      type: object
      required:
        - amount
        - jetton
        - sender
        - senders_wallet
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        senders_wallet:
          type: string
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          description: amount in quanta of tokens
          example: 1000000000
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    JettonMintAction:
      type: object
      required:
        - amount
        - jetton
        - recipient
        - recipients_wallet
      properties:
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        recipients_wallet:
          type: string
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          description: amount in quanta of tokens
          example: 1000000000
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    ContractDeployAction:
      type: object
      required:
        - address
        - interfaces
      properties:
        address:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        interfaces:
          type: array
          items:
            type: string
          example: [ "nft_item", "nft_royalty" ]
    SubscriptionAction:
      type: object
      required:
        - subscriber
        - subscription
        - beneficiary
        - amount
        - initial
      properties:
        subscriber:
          $ref: '#/components/schemas/AccountAddress'
        subscription:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        beneficiary:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: integer
          format: int64
          example: 1000000000
        initial:
          type: boolean
          example: false
    UnSubscriptionAction:
      type: object
      required:
        - subscriber
        - subscription
        - beneficiary
      properties:
        subscriber:
          $ref: '#/components/schemas/AccountAddress'
        subscription:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        beneficiary:
          $ref: '#/components/schemas/AccountAddress'
    AuctionBidAction:
      type: object
      required:
        - amount
        - bidder
        - auction
        - auction_type
      properties:
        auction_type:
          type: string
          enum:
            - DNS.ton
            - DNS.tg
            - NUMBER.tg
            - getgems
        amount:
          $ref: '#/components/schemas/Price'
        nft:
          $ref: '#/components/schemas/NftItem'
        bidder:
          $ref: '#/components/schemas/AccountAddress'
        auction:
          $ref: '#/components/schemas/AccountAddress'
    DepositStakeAction:
      description: "validator's participation in elections"
      type: object
      required:
        - amount
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    WithdrawStakeAction:
      description: "validator's participation in elections"
      type: object
      required:
        - amount
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    WithdrawStakeRequestAction:
      description: "validator's participation in elections"
      type: object
      required:
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    ElectionsRecoverStakeAction:
      type: object
      required:
        - amount
        - staker
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
    ElectionsDepositStakeAction:
      type: object
      required:
        - amount
        - staker
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
    JettonSwapAction:
      type: object
      required:
        - dex
        - amount_in
        - amount_out
        - user_wallet
        - router
      properties:
        dex:
          type: string
          enum:
            - stonfi
            - dedust
            - megatonfi
        amount_in:
          type: string
          example: "1660050553"
        amount_out:
          type: string
          example: "1660050553"
        ton_in:
          type: integer
          example: 1000000000
          format: int64
        ton_out:
          type: integer
          example: 2000000000
          format: int64
        user_wallet:
          $ref: '#/components/schemas/AccountAddress'
        router:
          $ref: '#/components/schemas/AccountAddress'
        jetton_master_in:
          $ref: '#/components/schemas/JettonPreview'
        jetton_master_out:
          $ref: '#/components/schemas/JettonPreview'
    NftPurchaseAction:
      type: object
      required:
        - amount
        - seller
        - buyer
        - auction_type
        - nft
      properties:
        auction_type:
          type: string
          enum:
            - DNS.tg
            - getgems
            - basic
        amount:
          $ref: '#/components/schemas/Price'
        nft:
          $ref: '#/components/schemas/NftItem'
        seller:
          $ref: '#/components/schemas/AccountAddress'
        buyer:
          $ref: '#/components/schemas/AccountAddress'
    ActionSimplePreview:
      type: object
      description: shortly describes what this action is about.
      required:
        - name
        - description
        - accounts
      properties:
        name:
          type: string
          example: "Ton Transfer"
        description:
          type: string
          example: "Transferring 5 Ton"
        action_image:
          type: string
          description: a link to an image for this particular action.
        value:
          type: string
          example: "5 Ton"
        value_image:
          type: string
          description: a link to an image that depicts this action's asset.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountAddress'
    AccountEvent:
      type: object
      description: An event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.
      required:
        - event_id
        - timestamp
        - actions
        - account
        - is_scam
        - lt
        - in_progress
        - extra
      properties:
        event_id:
          type: string
          example: e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e
        account:
          $ref: '#/components/schemas/AccountAddress'
        timestamp:
          type: integer
          format: int64
          example: 1234567890
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        is_scam:
          type: boolean
          description: scam
          example: false
        lt:
          type: integer
          format: int64
          example: 25713146000001
        in_progress:
          type: boolean
          example: false
          description: Event is not finished yet. Transactions still happening
        extra:
          description: TODO
          type: integer
          format: int64
          example: 3
    AccountEvents:
      type: object
      required:
        - events
        - next_from
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/AccountEvent'
        next_from:
          type: integer
          format: int64
          example: 25713146000001
    TraceID:
      type: object
      required:
        - id
        - utime
      properties:
        id:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        utime:
          type: integer
          format: uint64
          example: 1645544908
    TraceIDs:
      type: object
      required:
        - traces
      properties:
        traces:
          type: array
          items:
            $ref: '#/components/schemas/TraceID'
    ApyHistory:
      type: object
      required:
        - apy
        - time
      properties:
        apy:
          type: number
        time:
          type: integer
    Subscription:
      type: object
      required:
        - address
        - wallet_address
        - beneficiary_address
        - amount
        - period
        - start_time
        - timeout
        - last_payment_time
        - last_request_time
        - subscription_id
        - failed_attempts
      properties:
        address:
          type: string
          example: 0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee
        wallet_address:
          type: string
          example: 0:567DE86AF2B6A557D7085807CF7C26338124987A5179344F0D0FA2657EB710F1
        beneficiary_address:
          type: string
          example: 0:c704dadfabac88eab58e340de03080df81ff76636431f48624ad6e26fb2da0a4
        amount:
          type: integer
          format: int64
          example: 1000000000
        period:
          type: integer
          format: int64
          example: 2592000
        start_time:
          type: integer
          format: int64
          example: 1653996832
        timeout:
          type: integer
          format: int64
          example: 10800
        last_payment_time:
          type: integer
          format: int64
          example: 1653996834
        last_request_time:
          type: integer
          format: int64
          example: 0
        subscription_id:
          type: integer
          format: int64
          example: 217477
        failed_attempts:
          type: integer
          format: int32
          example: 0
    Subscriptions:
      type: object
      required:
        - subscriptions
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    Auction:
      type: object
      required:
        - domain
        - owner
        - price
        - bids
        - date
      properties:
        domain:
          type: string
          example: wallet.ton
        owner:
          type: string
          example: owner
        price:
          type: integer
          format: int64
          example: 1660050553
        bids:
          type: integer
          format: int64
          example: 1660050553
        date:
          type: integer
          format: int64
          example: 1660050553
    Auctions:
      type: object
      required:
        - data
        - total
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Auction'
        total:
          type: integer
          format: int64
          example: 1660050553
    WalletDNS:
      type: object
      required:
        - address
        - is_wallet
        - has_method_pubkey
        - has_method_seqno
        - names
      properties:
        address:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        is_wallet:
          type: boolean
          example: true
        has_method_pubkey:
          type: boolean
          example: true
        has_method_seqno:
          type: boolean
          example: true
        names:
          type: array
          items:
            type: string
            example: "name"
    DomainInfo:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        expiring_at:
          type: integer
          format: int64
          description: date of expiring. optional. not all domain in ton has expiration date
        item:
          $ref: '#/components/schemas/NftItem'
    DnsRecord:
      type: object
      required:
        - sites
      properties:
        wallet:
          $ref: '#/components/schemas/WalletDNS'
        next_resolver:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        sites:
          type: array
          items:
            type: string
            example: "http://12234.ton"
        storage:
          type: string
          description: "tonstorage bag id"
          example: "da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
    NftCollection:
      type: object
      required:
        - address
        - next_item_index
        - raw_collection_content
        - approved_by
      properties:
        address:
          type: string
          example: 0:FD595F36B4C1535BEC8461490D38EBB9AE3C38DD6ACE17CA63ABE2C6608BE159
        next_item_index:
          type: integer
          format: int64
          example: 1
        owner:
          $ref: '#/components/schemas/AccountAddress'
        raw_collection_content:
          type: string
          example: 697066733a2f2f516d596e437861746f5178433571584b79773971656768415853626f3544644e6a32387631487669437a47355359
        metadata:
          type: object
          additionalProperties: true
          example: { }
        previews:
          type: array
          items:
            $ref: '#/components/schemas/ImagePreview'
        approved_by:
          $ref: '#/components/schemas/NftApprovedBy'
    NftCollections:
      type: object
      required:
        - nft_collections
      properties:
        nft_collections:
          type: array
          items:
            $ref: '#/components/schemas/NftCollection'
    Trace:
      type: object
      required:
        - transaction
        - interfaces
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction'
        interfaces:
          type: array
          items:
            type: string
          example: [ "wallet", "tep62_item" ]
        children:
          type: array
          items:
            $ref: '#/components/schemas/Trace'
        emulated:
          type: boolean
          example: false
    MessageConsequences:
      type: object
      required:
        - trace
        - risk
        - event
      properties:
        trace:
          $ref: '#/components/schemas/Trace'
        risk:
          $ref: '#/components/schemas/Risk'
        event:
          $ref: '#/components/schemas/AccountEvent'
    Risk:
      type: object
      description: Risk specifies assets that could be lost if a message would be sent to a malicious smart contract. It makes sense to understand the risk BEFORE sending a message to the blockchain.
      required:
        - transfer_all_remaining_balance
        - ton
        - jettons
        - nfts
      properties:
        transfer_all_remaining_balance:
          type: boolean
          description: transfer all the remaining balance of the wallet.
          example: true
        ton:
          type: integer
          format: int64
          example: 500
        jettons:
          type: array
          items:
            $ref: '#/components/schemas/JettonQuantity'
        nfts:
          type: array
          items:
            $ref: '#/components/schemas/NftItem'
    JettonQuantity:
      type: object
      required:
        - quantity
        - wallet_address
        - jetton
      properties:
        quantity:
          type: string
          example: 597968399
        wallet_address:
          $ref: '#/components/schemas/AccountAddress'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    DecodedMessage:
      type: object
      required:
        - destination
        - destination_wallet_version
      properties:
        destination:
          $ref: '#/components/schemas/AccountAddress'
        destination_wallet_version:
          type: string
          example: "v3R2"
        ext_in_msg_decoded:
          type: object
          properties:
            wallet_v3:
              type: object
              required:
                - subwallet_id
                - valid_until
                - seqno
                - op
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: uint32
                  example: 1
                valid_until:
                  type: integer
                  format: uint32
                  example: 1
                seqno:
                  type: integer
                  format: uint32
                  example: 1
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
            wallet_v4:
              type: object
              required:
                - subwallet_id
                - valid_until
                - seqno
                - op
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: uint32
                  example: 1
                valid_until:
                  type: integer
                  format: uint32
                  example: 1
                seqno:
                  type: integer
                  format: uint32
                  example: 1
                op:
                  type: integer
                  format: int8
                  example: 1
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
            wallet_highload_v2:
              type: object
              required:
                - subwallet_id
                - bounded_query_id
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: uint32
                  example: 1
                bounded_query_id:
                  type: string
                  example: "34254528475294857"
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
    DecodedRawMessage:
      type: object
      required:
        - message
        - mode
      properties:
        message:
          type: object
          required:
            - boc
          properties:
            boc:
              type: string
              example: "te6ccgEBAQEABgAACCiAmCMBAgEABwA="
            decoded_op_name:
              type: string
              example: "nft_transfer"
            op_code:
              type: string
              example: "0xdeadbeaf"
            decoded_body: { } # Free-form JSON value
        mode:
          type: integer
          example: 2
    Event:
      type: object
      required:
        - event_id
        - timestamp
        - actions
        - fees
        - value_flow
        - is_scam
        - lt
        - in_progress
      properties:
        event_id:
          type: string
          example: e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e
        timestamp:
          type: integer
          format: int64
          example: 1234567890
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        value_flow:
          type: array
          items:
            $ref: '#/components/schemas/ValueFlow'
        is_scam:
          type: boolean
          description: scam
          example: false
        lt:
          type: integer
          format: int64
          example: 25713146000001
        in_progress:
          type: boolean
          example: false
          description: Event is not finished yet. Transactions still happening
    JettonMetadata:
      type: object
      required:
        - address
        - name
        - symbol
        - decimals
      properties:
        address:
          type: string
          example: 0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0
        name:
          type: string
          example: Wrapped TON
        symbol:
          type: string
          example: WTON
        decimals:
          type: string
          example: "9"
        image:
          type: string
          example: "https://cache.tonapi.io/images/jetton.jpg"
        description:
          type: string
          example: Wrapped Toncoin
        social:
          type: array
          items:
            type: string
            example: [ "https://t.me/durov_coin", "https://twitter.com/durov_coin" ]
        websites:
          type: array
          items:
            type: string
            example: [ "https://durov.coin", "ton://durov-coin.ton" ]
        catalogs:
          type: array
          items:
            type: string
            example: [ "https://coinmarketcap.com/currencies/drv/", "https://www.coingecko.com/en/coins/durov" ]
    Jettons:
      type: object
      required:
        - jettons
      properties:
        jettons:
          type: array
          items:
            $ref: '#/components/schemas/JettonInfo'
    JettonInfo:
      type: object
      required:
        - mintable
        - total_supply
        - metadata
        - verification
        - holders_count
      properties:
        mintable:
          type: boolean
          example: true
        total_supply:
          type: string
          example: 311500000000000
        metadata:
          $ref: '#/components/schemas/JettonMetadata'
        verification:
          $ref: '#/components/schemas/JettonVerificationType'
        holders_count:
          type: integer
          format: int32
          example: 2000
    JettonHolders:
      type: object
      required:
        - addresses
      properties:
        addresses:
          type: array
          items:
            type: object
            required:
              - address
              - owner
              - balance
            properties:
              address:
                type: string
                example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
              owner:
                $ref: '#/components/schemas/AccountAddress'
              balance:
                type: string
                example: 1000000000
    AccountStaking:
      type: object
      required:
        - pools
      properties:
        pools:
          type: array
          items:
            $ref: '#/components/schemas/AccountStakingInfo'
    AccountStakingInfo:
      type: object
      required:
        - pool
        - amount
        - pending_deposit
        - pending_withdraw
        - ready_withdraw
      properties:
        pool:
          type: string
          example: "EQBI-wGVp_x0VFEjd7m9cEUD3tJ_bnxMSp0Tb9qz757ATEAM"
        amount:
          type: integer
          format: int64
          example: 10050000000000
        pending_deposit:
          type: integer
          format: int64
          example: 500000000000
        pending_withdraw:
          type: integer
          format: int64
          example: 500000000000
        ready_withdraw:
          type: integer
          format: int64
          example: 500000000000
    PoolInfo:
      type: object
      required:
        - address
        - total_amount
        - implementation
        - apy
        - name
        - min_stake
        - cycle_start
        - cycle_end
        - verified
        - current_nominators
        - max_nominators
        - nominators_stake
        - validator_stake
      properties:
        address:
          type: string
          example: "0:48fb0195a7fc7454512377b9bd704503ded27f6e7c4c4a9d136fdab3ef9ec04c"
        name:
          type: string
          example: "Tonkeeper pool"
        total_amount:
          type: integer
          format: int64
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
        apy:
          type: number
          description: APY in percent
          example: 5.31
        min_stake:
          type: integer
          format: int64
          example: 5000000000
        cycle_start:
          type: integer
          description: current nomination cycle beginning timestamp
          format: int64
          example: 1678223064
        cycle_end:
          type: integer
          description: current nomination cycle ending timestamp
          format: int64
          example: 1678223064
        verified:
          type: boolean
          example: true
          description: this pool has verified source code or managed by trusted company
        current_nominators:
          type: integer
          example: 10
          description: current number of nominators
        max_nominators:
          type: integer
          example: 100
          description: maximum number of nominators
        liquid_jetton_master:
          type: string
          example: "0:4a91d32d0289bda9813ae00ff7640e6c38fdce76e4583dd6afc463b70c7d767c"
          description: "for liquid staking master account of jetton"
        nominators_stake:
          type: integer
          format: int64
          example: 5000000000
          description: "total stake of all nominators"
        validator_stake:
          type: integer
          format: int64
          example: 5000000000
          description: "stake of validator"
        cycle_length:
          type: integer
          format: int64
    PoolImplementation:
      type: object
      required:
        - name
        - description
        - url
        - socials
      properties:
        name:
          type: string
          example: TON Whales
        description:
          type: string
          example: "Oldest pool with minimal staking amount 50 TON"
        url:
          type: string
          example: "https://tonvalidators.org/"
        socials:
          type: array
          items:
            type: string
            example: "https://t.me/tonwhales"
    StorageProvider:
      type: object
      required:
        - address
        - accept_new_contracts
        - rate_per_mb_day
        - max_span
        - minimal_file_size
        - maximal_file_size
      properties:
        address:
          type: string
          example: 0:FD595F36B4C1535BEC8461490D38EBB9AE3C38DD6ACE17CA63ABE2C6608BE159
        accept_new_contracts:
          type: boolean
          example: true
        rate_per_mb_day:
          type: integer
          format: int64
          example: 50000000
        max_span:
          type: integer
          format: int64
          example: 604800
        minimal_file_size:
          type: integer
          format: int64
          example: 64
        maximal_file_size:
          type: integer
          format: int64
          example: 10485760
    FoundAccounts:
      type: object
      required:
        - addresses
      properties:
        addresses:
          type: array
          items:
            type: object
            required:
              - address
              - name
              - preview
            properties:
              address:
                type: string
                example: "0:010cеeac44fad23417a5c55e4071796868771082с9a61e8c195a8d57508b8471"
              name:
                type: string
                example: "blah_blah.ton"
              preview:
                type: string
                example: "https://cache.tonapi.io/images/media.jpg"
    DnsExpiring:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - expiring_at
              - name
            properties:
              expiring_at:
                type: integer
                format: int64
                example: "1678275313"
              name:
                type: string
                example: "blah_blah.ton"
              dns_item:
                $ref: '#/components/schemas/NftItem'
    AccountInfoByStateInit:
      type: object
      required:
        - public_key
        - address
      properties:
        public_key:
          type: string
          example: "NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3..."
        address:
          type: string
          example: "0:97146a46acc2654y27947f14c4a4b14273e954f78bc017790b41208b0043200b"
    Seqno:
      type: object
      required:
        - seqno
      properties:
        seqno:
          type: integer
          format: uint32
    BlockRaw:
      type: object
      required:
        - workchain
        - shard
        - seqno
        - root_hash
        - file_hash
      properties:
        workchain:
          type: integer
          example: 4294967295
          format: uint32
        shard:
          type: integer
          example: 9223372036854775808
          format: uint64
        seqno:
          type: integer
          example: 30699640
          format: uint32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    InitStateRaw:
      type: object
      required:
        - workchain
        - root_hash
        - file_hash
      properties:
        workchain:
          type: integer
          example: 4294967295
          format: uint32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    EncryptedComment:
      type: object
      required:
        - encryption_type
        - cipher_text
      properties:
        encryption_type:
          type: string
          example: "simple"
        cipher_text:
          type: string
          example: "A6A0BD6608672B...CE3AF8DB"
    BlockchainAccountInspect:
      type: object
      required:
        - code
        - code_hash
        - methods
      properties:
        code:
          type: string
        code_hash:
          type: string
        methods:
          type: array
          items:
            type: object
            required:
              - id
              - method
            properties:
              id:
                type: integer
                format: int64
              method:
                type: string
                example: "get_something"
        compiler:
          type: string
          enum:
            - func
    PoolImplementationType:
      type: string
      enum:
        - whales
        - tf
        - liquidTF
    TokenRates:
      type: object
      properties:
        prices:
          type: object
          additionalProperties:
            type: number
          example:
            TON: 1.3710752873163712
        diff_24h:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-1.28%"
        diff_7d:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-2.74%"
        diff_30d:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-0.56%"
  
  responses:
    Error:
      description: Some error during request processing
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
